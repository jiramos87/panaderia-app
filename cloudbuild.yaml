steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/panaderia-backend:latest', './backend']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/panaderia-frontend:latest', './frontend']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/panaderia-backend:latest']
    
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/panaderia-frontend:latest']

  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'panaderia-backend',
      '--image', 'gcr.io/$PROJECT_ID/panaderia-backend:latest',
      '--platform', 'managed',
      '--region', '$_REGION',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '1Gi',
      '--timeout', '600',
      '--add-cloudsql-instances', '$PROJECT_ID:$_REGION:$_INSTANCE_NAME',
      '--set-env-vars', 'NODE_ENV=production,DB_HOST=/cloudsql/$PROJECT_ID:$_REGION:$_INSTANCE_NAME,DB_PORT=5432,DB_NAME=$_DATABASE_NAME,DB_USER=$_DB_USER,DB_DIALECT=postgres',
      '--set-secrets', 'DB_PASSWORD=db-password:latest'
    ]

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      BACKEND_URL=$$(gcloud run services describe panaderia-backend --region=$_REGION --format="value(status.url)")
      gcloud run deploy panaderia-frontend \
        --image gcr.io/$PROJECT_ID/panaderia-frontend:latest \
        --platform managed \
        --region $_REGION \
        --allow-unauthenticated \
        --port 8080 \
        --memory 512Mi \
        --set-env-vars REACT_APP_API_URL=$$BACKEND_URL/api

substitutions:
  _REGION: 'us-central1'  # Se actualiza din√°micamente
  _INSTANCE_NAME: 'postgres-instance'
  _DATABASE_NAME: 'panaderia'
  _DB_USER: 'panaderia_user'

images:
  - 'gcr.io/$PROJECT_ID/panaderia-backend:latest'
  - 'gcr.io/$PROJECT_ID/panaderia-frontend:latest'

options:
  logging: CLOUD_LOGGING_ONLY
